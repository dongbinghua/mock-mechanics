
X fix spinning
X create hinge constraint
X create more stable weld constraint
X create 0.5X1
X create hinge for axle
X create rotating dumbell
X move/pan in interact mode

only half-block moving bug
use first point as snap point
create 2X1 block
rotate object after placed
create multiple block sizes
draw lines on blocks
create motor (turn on/off programmatically for now)
create button activated claw

---------------------------------------------------- later

dampen cable ocillations
add constraint to objects constraint map
delete point constraint
delete hinge constraint
update cable lengths on move mode
motor limits (min and maximum lenghts)?
adding object to two snap points simultaneously
use correct hinge radius (use cylinder body)
link gears (treat as one object, set ratio)
computer model as chip
recompute cable lenght after moving its parts
create sliding part (snap to cable, can be snapped to)
create always-on motor
pull sliding trolley with motor
sensors as forks on square wave editor
control motor with square wave
create button part
create spring part
set color of any part
join point constraints objects into single object?
conducting cable (reuse cable logic)
bike chains
weekly tournaments (modelling inspiration)
gallery of mechanisms (mine and submited)
create part menu
show that part is selected
create part properties pane (color, dimensions)
create winding part (snap to cable and change cable size when rotated)
grid islands
create better part models
create youtube tutorial (instead of info)
create video feature
"think mechanically"
challenges
small cube edges inside larger cube
don't allow double cable between anchors
parameterize snap point distance (placement and cable)
pan and rotate in wire mode
don't snap if there is collision
don't snap anchors to axles, etc
create bounding boxes for parts (faster picking)
draw guide snap points
create prefab object
place z limit on snap (no long jumps)
activate and release motor
add spring between door and support
publish on steam
limited supply of each kind (buy more)
buy ability to save
program motor with clojure/phyton

---------------------------------------------------- done
X create red cube
X create arbitrary 3d structure from array
X snap sphere to snap points
X compute snap points from structure
X snap sphere to any face of structure
X use closest snap point
X point cone in the direction of normal
X compute normal of snap points
X point cone in direction of snap point normal
X attach cube to grid
X better name
X pick base of object
X snap base of object
X create part structure
X draw parts
X implement get-part-at
X get all cube faces
X test with cone
X attach cube to other cubes
X attach axle to cube
X attach cube to axle
X panning
X draw line between two points (thin cylinder)
X create modes
X create multi-step cable
X create cable between anchor and mouse
X snap cable to pulley and create second segment
X update busy pulleys
X snap cable to anchor and finish cable
X create get-close-part
X reimplement get-close-pulley
X delete cable if not found an anchor
X create redraw flag
X create mode buttons (move, interact, wire)
X create interaction mode
X change wire to cable
X break up subsystems
X create falling red cube
X reboot physics
X create ground
X create separate physics file
X pause physics if not in interact mode
X change cube to block
X re-add body manually
X use position/rotation or body
X remove body and set position/rotation
X set position/rotation on mouse-press
X remove body on mouse-press
X change position/rotation on mouse-place
X add body on mouse-release
X use create-part-body on constructor
X only snap to grid
X snap to rotated faces
X reboot snapping
X create other parts bodies
X make sure parts don't jump (offsets)
X join pulley and anchor
X create correct part models
X reboot cable creation
X reboot mouse force
X make sure mouse force attaches at surface
X reimplement get-part-at
X create constraint if it does not exist
X get snap object
X print create constraint obj1, obj2
X create weld constraint with bodies
X create hinge constraint with global point and axis
X add ground cube (and axis?)
X create weld constraint
X falling block with anchor welded
X add constraint to ground
X create two free blocks and cable
X print total cable length on finish
X if cable is too small apply force on first node +x
X apply force proportional to length difference
X apply reverse force
X apply force to all segments
X enforce cable length
