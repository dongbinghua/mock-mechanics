{:parts {:button10591 {:value 0, :children nil, :pins nil, :connections nil, :functions nil}, :button54098 {:children nil, :color :red, :pins nil, :scale [0.5 0.2 0.5], :value 0, :functions nil, :type :button, :layer 4, :connections nil}, :ground-part {:type :ground, :color :dark-gray, :scale [12 0.2 12], :children {:button54098 {:position [-3.75 0.2 2.75], :rotation [0.0 1.0 0.0 0.0]}, :motherboard54097 {:position [-0.75 0.135 0.25], :rotation [0.0 1.0 0.0 0.0]}}, :pins nil, :connections nil, :functions nil}, :motherboard54097 {:children nil, :color :blue, :pins {:button54098 {:x 40, :trigger true, :value 0}}, :script "\n[button platform corner]\n\n(fn [part-name]\n  (when (off? button)\n    (doseq [probe (get-children platform)]\n      (if (not= (get-color probe) :purple)\n        (update-thing! [] #(delete-part % probe))))\n    (let [[point direction] (probe->line corner)]\n      (dotimes [i 22]\n        (let [color (rand-int 4)\n              offset [(* i -0.2) 5 (* color -0.15)]\n              line [(vector-add point offset) direction]]\n          (set-thing! [:add-type] :probe)\n          (mode-click! :add line [])\n          (set-thing! [:parts (get-part line) :color] :white)))\n      (update-thing! [] tree-changed))))\n    \n", :scale [0.3 0.07 0.3], :functions nil, :type :motherboard, :use-script true, :layer 0, :connections nil, :tab 0}}, :camera {:vector [0 0 1], :distance 39.63371407517374, :x-angle 42.60000000000005, :y-angle -738.1999999999877, :pivot [0.5395360492096861 9.414691248821327E-14 1.208459023516836], :eye [9.65168338044748 26.82710647583017 28.923190239947502]}, :gears nil, :visible-layers [0], :layer-names ["main" "reader" "random" "" "" "" "" "" "" "" "" "" "" "" ""], :sphere-transforms []}